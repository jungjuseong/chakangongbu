[{"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\reportWebVitals.js":"1","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\hooks\\useToken.js":"2","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\ProductList.js":"3","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\hooks\\CartContext.js":"4","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\NotFound.js":"5","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Header.js":"6","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Cart.js":"7","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Login.js":"8","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\ProductDetail.js":"9","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Orders.js":"10","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\api\\Auth.js":"11","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\api\\ProductClient.js":"12","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\api\\CartClient.js":"13","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Products.js":"14","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Button.js":"15","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\api\\OrderClient.js":"16","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\api\\CustomerClient.js":"17","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\CartItem.js":"18","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\api\\Config.js":"19","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\ProductCard.js":"20","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\index.tsx":"21","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\App.js":"22","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Main.js":"23","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Sidebar.js":"24","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Member.js":"25"},{"size":375,"mtime":1641345576235,"results":"26","hashOfConfig":"27"},{"size":536,"mtime":1641345576234,"results":"28","hashOfConfig":"27"},{"size":1610,"mtime":1642389422081,"results":"29","hashOfConfig":"27"},{"size":1487,"mtime":1641345576233,"results":"30","hashOfConfig":"27"},{"size":406,"mtime":1641345576227,"results":"31","hashOfConfig":"27"},{"size":1733,"mtime":1642412068039,"results":"32","hashOfConfig":"27"},{"size":8027,"mtime":1642408656903,"results":"33","hashOfConfig":"27"},{"size":3513,"mtime":1642413640509,"results":"34","hashOfConfig":"27"},{"size":4978,"mtime":1641345576229,"results":"35","hashOfConfig":"27"},{"size":4879,"mtime":1641345576228,"results":"36","hashOfConfig":"27"},{"size":2639,"mtime":1641345576218,"results":"37","hashOfConfig":"27"},{"size":1616,"mtime":1641345576222,"results":"38","hashOfConfig":"27"},{"size":2545,"mtime":1641345576219,"results":"39","hashOfConfig":"27"},{"size":271,"mtime":1641345576231,"results":"40","hashOfConfig":"27"},{"size":720,"mtime":1641345576223,"results":"41","hashOfConfig":"27"},{"size":1980,"mtime":1641345576221,"results":"42","hashOfConfig":"27"},{"size":1183,"mtime":1641345576220,"results":"43","hashOfConfig":"27"},{"size":2836,"mtime":1641345576224,"results":"44","hashOfConfig":"27"},{"size":1703,"mtime":1641345576220,"results":"45","hashOfConfig":"27"},{"size":3613,"mtime":1642408675866,"results":"46","hashOfConfig":"27"},{"size":542,"mtime":1642410583310,"results":"47","hashOfConfig":"27"},{"size":1845,"mtime":1642413015750,"results":"48","hashOfConfig":"27"},{"size":490,"mtime":1642408617496,"results":"49","hashOfConfig":"27"},{"size":920,"mtime":1642498765345,"results":"50","hashOfConfig":"27"},{"size":2752,"mtime":1642566813838,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ihbcbt",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"57"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"57"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\reportWebVitals.js",[],["119","120"],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\hooks\\useToken.js",[],["121","122"],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\ProductList.js",["123"],"import { useEffect, useState } from \"react\";\r\nimport CartClient from \"../api/CartClient\";\r\nimport ProductClient from \"../api/ProductClient\";\r\nimport { updateCart, useCartContext } from \"../hooks/CartContext\";\r\nimport Products from \"./Products\";\r\n\r\nconst ProductList = (props) => {\r\n  const [productList, setProductList] = useState();\r\n  const [noRecMsg, setNoRecMsg] = useState(\"Loading...\");\r\n  const { dispatch } = useCartContext();\r\n  const auth = props.auth\r\n  \r\n  useEffect(() => {\r\n    async function fetchProducts() {\r\n      const res = await new ProductClient().fetchList();\r\n      if (res && res.success) {\r\n        setProductList(res.data);\r\n      } else {\r\n        setNoRecMsg(res);\r\n      }\r\n    }\r\n    async function fetchCart(auth) {\r\n      const res = await new CartClient(auth).fetch();\r\n      if (res && res.success) {\r\n        console.log(res.data);\r\n        dispatch(updateCart(res.data.items));\r\n        if (res.data?.items && res.data.items?.length < 1) {\r\n          setNoRecMsg(\"Cart is empty.\");\r\n        }\r\n      } else {\r\n        setNoRecMsg(res && typeof res === \"string\" ? res : res?.error?.message);\r\n      }\r\n    }\r\n    if (auth?.token) fetchCart(auth);\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n      {productList ? (\r\n        <div className=\"flex flex-wrap -mx-1 lg:-mx-4\">\r\n          <Products auth={auth} productList={productList ? productList : []} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-lg font-semibold\">{noRecMsg}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProductList;\r\n","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\hooks\\CartContext.js",[],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\NotFound.js",[],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Header.js",["124","125","126"],"import \"./Header.scss\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\nimport Logo from \"./../images/main_logo.png\";\r\n\r\n\r\nconst Header = ({ userInfo, auth, history }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  const handleClick = (event) => {\r\n    const target = document.querySelector(\"#headerUserMenu\");\r\n    const withinBoundaries = event.composedPath().includes(target);\r\n    if (!withinBoundaries) {\r\n      if (open) setOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async (e) => {\r\n    await auth.logoutUser({ refreshToken: userInfo.refreshToken });\r\n    if (open) setOpen(false);\r\n    history.push(\"/members\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedIn(userInfo ? true : false);\r\n  }, [userInfo]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", handleClick);\r\n    // cleanup this component\r\n    return () => {\r\n      window.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"header\">\r\n          <div className=\"main_logo\">\r\n            <Link to=\"/members\"><img src={Logo} alt=\"\"></img></Link>\r\n          </div>\r\n          <div className=\"header_menu\">\r\n            <button className=\"event\">\r\n              이벤트\r\n            </button>\r\n            <button className=\"info\">\r\n              공지사항\r\n            </button>\r\n            <button className=\"quizbank\">\r\n              문제은행\r\n            </button>\r\n            <Link className=\"menu_logout\" to={\"/login\"}>\r\n              로그아웃\r\n            </Link>\r\n          </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Cart.js",["127","128"],"import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CartClient from \"../api/CartClient\";\r\nimport CustomerClient from \"../api/CustomerClient\";\r\nimport OrderClient from \"../api/OrderClient\";\r\nimport { removeItem, updateCart, useCartContext } from \"../hooks/CartContext\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nconst Cart = ({ auth }) => {\r\n  const [grandTotal, setGrandTotal] = useState(0);\r\n  const [noRecMsg, setNoRecMsg] = useState(\"Loading...\");\r\n\r\n  const cartClient = new CartClient(auth);\r\n  const orderClient = new OrderClient(auth);\r\n  const customerClient = new CustomerClient(auth);\r\n  const { cartItems, dispatch } = useCartContext();\r\n\r\n  const calTotal = (items) => {\r\n    let total = 0;\r\n    items?.forEach((i) => (total = total + i?.unitPrice * i?.quantity));\r\n    return total.toFixed(2);\r\n  };\r\n\r\n  const increaseQty = async (id) => {\r\n    const idx = cartItems.findIndex((i) => i.id === id);\r\n    if (~idx) {\r\n      cartItems[idx].quantity = cartItems[idx].quantity + 1;\r\n      const res = await cartClient.addOrUpdate(cartItems[idx]);\r\n      if (res && res.success) {\r\n        console.log(res.data);\r\n        refreshCart(res.data);\r\n        if (res.data?.length < 1) {\r\n          setNoRecMsg(\"Cart is empty.\");\r\n        }\r\n      } else {\r\n        setNoRecMsg(res && typeof res === \"string\" ? res : res.error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const decreaseQty = async (id) => {\r\n    const idx = cartItems.findIndex((i) => i.id === id);\r\n    if (~idx && cartItems[idx].quantity <= 1) {\r\n      return deleteItem(id);\r\n    } else if (cartItems[idx]?.quantity > 1) {\r\n      cartItems[idx].quantity = cartItems[idx].quantity - 1;\r\n      const res = await cartClient.addOrUpdate(cartItems[idx]);\r\n      if (res && res.success) {\r\n        refreshCart(res.data);\r\n        if (res.data?.length < 1) {\r\n          setNoRecMsg(\"Cart is empty.\");\r\n        }\r\n        return;\r\n      } else {\r\n        setNoRecMsg(res && typeof res === \"string\" ? res : res?.error?.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteItem = async (id) => {\r\n    const idx = cartItems.findIndex((i) => i.id === id);\r\n    if (~idx) {\r\n      const res = await cartClient.remove(cartItems[idx].id);\r\n      if (res && res.success) {\r\n        dispatch(removeItem(idx));\r\n        if (res.data?.length < 1) {\r\n          setNoRecMsg(\"Item is removed.\");\r\n        }\r\n      } else {\r\n        setNoRecMsg(\r\n          res && typeof res === \"string\"\r\n            ? res\r\n            : \"There is an error performing the remove.\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const refreshCart = (items) => {\r\n    setGrandTotal(calTotal(items));\r\n    dispatch(updateCart(items));\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const res = await cartClient.fetch();\r\n      if (res && res.success) {\r\n        console.log(res.data);\r\n        refreshCart(res.data.items);\r\n        if (res.data?.items && res.data.items?.length < 1) {\r\n          setNoRecMsg(\"Cart is empty.\");\r\n        }\r\n      } else {\r\n        setNoRecMsg(res && typeof res === \"string\" ? res : res.error.message);\r\n      }\r\n    }\r\n    fetch();\r\n  }, []);\r\n\r\n  const checkout = async () => {\r\n    const res = await customerClient.fetch();\r\n    if (res && res.success) {\r\n      const payload = {\r\n        address: { id: res.data.addressId },\r\n        card: { id: res.data.cardId },\r\n      };\r\n      const orderRes = await orderClient.add(payload);\r\n      if (orderRes && orderRes.success) {\r\n    \r\n      } else {\r\n        setNoRecMsg(\r\n          orderRes && typeof orderRes === \"string\"\r\n            ? orderRes\r\n            : \"Couldn't process checkout.\"\r\n        );\r\n      }\r\n    } else {\r\n      setNoRecMsg(\r\n        res && typeof res === \"string\" ? res : \"error retreiving customer\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"flex shadow-md my-4\">\r\n        <div className=\"w-3/4 bg-gray-100 px-10 py-5\">\r\n          <div className=\"flex justify-between border-b pb-8\">\r\n            <h1 className=\"font-semibold text-2xl\">Shopping Cart</h1>\r\n            <h2 className=\"font-semibold text-2xl\">\r\n              {cartItems?.length} Items\r\n            </h2>\r\n          </div>\r\n          <div className=\"flex mt-10 mb-5\">\r\n            <h3 className=\"font-semibold text-gray-600 text-xs uppercase w-2/5\">\r\n              Product Details\r\n            </h3>\r\n            <h3 className=\"font-semibold text-center text-gray-600 text-xs uppercase w-1/5\">\r\n              Quantity\r\n            </h3>\r\n            <h3 className=\"font-semibold text-center text-gray-600 text-xs uppercase w-1/5\">\r\n              Price\r\n            </h3>\r\n            <h3 className=\"font-semibold text-center text-gray-600 text-xs uppercase w-1/5\">\r\n              Total\r\n            </h3>\r\n          </div>\r\n          {cartItems && cartItems.length > 0 ? (\r\n            cartItems?.map((i) => (\r\n              <CartItem\r\n                item={i}\r\n                key={i.id}\r\n                increaseQty={increaseQty}\r\n                decreaseQty={decreaseQty}\r\n                removeItem={deleteItem}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div className=\"flex items-center hover:bg-gray-200 -mx-6 px-6 py-5\">\r\n              {noRecMsg}\r\n            </div>\r\n          )}\r\n          <Link\r\n            to=\"/\"\r\n            className=\"flex font-semibold text-indigo-600 text-sm mt-10\"\r\n          >\r\n            <svg\r\n              className=\"fill-current mr-2 text-indigo-600 w-4\"\r\n              viewBox=\"0 0 448 512\"\r\n            >\r\n              <path d=\"M134.059 296H436c6.627 0 12-5.373 12-12v-56c0-6.627-5.373-12-12-12H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.569 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296z\" />\r\n            </svg>\r\n            Continue Shopping\r\n          </Link>\r\n        </div>\r\n\r\n        <div id=\"summary\" className=\"bg-gray-50 w-1/4 px-8 py-10\">\r\n          <h1 className=\"font-semibold text-2xl border-b pb-8\">\r\n            Order Summary\r\n          </h1>\r\n          <div className=\"flex justify-between mt-10 mb-5\">\r\n            <span className=\"font-semibold text-sm uppercase\">\r\n              Items {cartItems?.length}\r\n            </span>\r\n            <span className=\"font-semibold text-sm\">${grandTotal}</span>\r\n          </div>\r\n          <div>\r\n            <label className=\"font-medium inline-block mb-3 text-sm uppercase\">\r\n              Shipping\r\n            </label>\r\n            <select className=\"block p-2 text-gray-600 w-full text-sm\">\r\n              <option>Free shipping - $0.00</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"py-10\">\r\n            <label\r\n              htmlFor=\"promo\"\r\n              className=\"font-semibold inline-block mb-3 text-sm uppercase\"\r\n            >\r\n              Promo Code\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"promo\"\r\n              placeholder=\"Enter your code\"\r\n              className=\"p-2 text-sm w-full cursor-not-allowed\"\r\n              disabled\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"bg-red-500 hover:bg-red-600 px-5 py-2 text-sm text-white uppercase cursor-not-allowed disabled:opacity-50\"\r\n            disabled\r\n          >\r\n            Apply\r\n          </button>\r\n          <div className=\"border-t mt-8\">\r\n            <div className=\"flex font-semibold justify-between py-6 text-sm uppercase\">\r\n              <span>Total cost</span>\r\n              <span>${grandTotal}</span>\r\n            </div>\r\n            <button\r\n              className=\"bg-indigo-500 font-semibold hover:bg-indigo-600 py-3 text-sm text-white uppercase w-full disabled:opacity-50\"\r\n              onClick={checkout}\r\n              disabled={grandTotal == 0 ? true : false}\r\n            >\r\n              Checkout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Login.js",["129","130","131"],"import './Login.scss'\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport logo from \"../images/login_logo.png\";\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst Login = ({ uri, auth }) => {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [errMsg, setErrMsg] = useState();\r\n  const navigate = useNavigate()\r\n  const cancel = () => {\r\n    navigate('/members')\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    // e.preventDefault();\r\n    // const res = await auth.loginUser({\r\n    //   username,\r\n    //   password,\r\n    // });\r\n    // if (res && res.success) {\r\n    //   setErrMsg(null);\r\n    // } else {\r\n    //   setErrMsg(\r\n    //     res && typeof res === \"string\" ? res : \"Invalid Username/Password\"\r\n    //   );\r\n    // }\r\n  };\r\n  return (\r\n    <div className='background'>\r\n      <div className=\"login_container\">\r\n        <div className='login_logo'>\r\n          <img src={logo} alt=''/>\r\n        </div>\r\n        <form className=\"login_form\" onSubmit={handleSubmit}>\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <div className='idtext'>\r\n                아이디\r\n              </div>\r\n              <span\r\n                className=\"text-red-500\"\r\n                style={{ dispay: errMsg ? \"block\" : \"none\" }}\r\n              >\r\n                {errMsg}\r\n              </span>\r\n              <label htmlFor=\"username\" className=\"sr-only\">\r\n                \r\n              </label>\r\n              <input\r\n                id=\"username\"\r\n                name=\"username\"\r\n                type=\"username\"\r\n                autoComplete=\"username\"\r\n                required\r\n                className=\"input\"\r\n                onChange={(e) => setUserName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className='passwordtext'>\r\n                비밀번호\r\n              </div>\r\n              <label htmlFor=\"password\" className=\"sr-only\">\r\n                \r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                className=\"input\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"submit\">\r\n            <div className=\"submit_remember\">\r\n            <label className=\"remember\">\r\n              <input type=\"checkbox\" className='remember_btn' />\r\n              아이디 기억하기\r\n            </label>\r\n              <button\r\n                // type=\"submit\"\r\n                className=\"submit_btn\"\r\n                onClick={cancel}\r\n              >\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"signup_find\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={()=>{}}\r\n                className=\"sign_up\"\r\n              >\r\n                회원가입 하기\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={()=>{}}\r\n                className=\"find_password\"\r\n              >\r\n                비밀번호/아이디 찾기\r\n              </button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\ProductDetail.js",["132","133"],"import { useEffect, useState } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport ProductClient from \"../api/ProductClient\";\r\nimport CartClient from \"../api/CartClient\";\r\nimport { updateCart, useCartContext } from \"../hooks/CartContext\";\r\n\r\nconst ProductDetail = ({ auth }) => {\r\n  const { id } = useParams();\r\n  const [product, setProduct] = useState({});\r\n  const [msg, setMsg] = new useState(\"\");\r\n  const history = new useHistory();\r\n  const { cartItems, dispatch } = useCartContext();\r\n  const cartClient = new CartClient(auth);\r\n\r\n  const callAddItemApi = async () => {\r\n    const qty = findQty(product.id);\r\n    return cartClient.addOrUpdate({\r\n      id: product.id,\r\n      quantity: qty + 1,\r\n      unitPrice: product.price,\r\n    });\r\n  };\r\n\r\n  const findQty = (id) => {\r\n    const idx = cartItems.findIndex((i) => i.id === id);\r\n    if (~idx) {\r\n      return cartItems[idx].quantity;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const checkLogin = () => {\r\n    if (!auth.token) {\r\n      history.push(\"/login\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const add = async () => {\r\n    const isLoggedIn = checkLogin();\r\n    if (isLoggedIn && product?.id) {\r\n      const res = await callAddItemApi();\r\n      if (res && res.success) {\r\n        console.log(res.data);\r\n        if (res.data?.length > 0) {\r\n          setMsg(\"Product added to bag.\");\r\n          dispatch(updateCart(res.data));\r\n        }\r\n      } else {\r\n        setMsg(res && typeof res === \"string\" ? res : res.error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const buy = async () => {\r\n    const isLoggedIn = checkLogin();\r\n    if (isLoggedIn && product?.id) {\r\n      const res = await callAddItemApi();\r\n      if (res && res.success) {\r\n        history.push(\"/cart\");\r\n      } else {\r\n        setMsg(res && typeof res === \"string\" ? res : res.error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getProduct(id) {\r\n      const client = new ProductClient();\r\n      const res = await client.fetch(id);\r\n      if (res && res.success) {\r\n        setProduct(res.data);\r\n      }\r\n    }\r\n    async function fetchCart(auth) {\r\n      const res = await new CartClient(auth).fetch();\r\n      if (res && res.success) {\r\n        console.log(res.data);\r\n        dispatch(updateCart(res.data.items));\r\n      }\r\n    }\r\n    if (auth?.token) fetchCart(auth);\r\n    getProduct(id);\r\n  }, [id]);\r\n\r\n  return (\r\n    <div\r\n      id={product?.id}\r\n      className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 my-1 w-full md:w-1/2 lg:my-4\"\r\n    >\r\n      <figure className=\"bg-gray-100 rounded-xl p-8 md:p-0 xs:flex md:block\">\r\n        <img\r\n          className=\"w-72 h-72 mx-auto\"\r\n          src={product?.imageUrl}\r\n          alt={product?.name}\r\n        />\r\n        <div className=\"pt-4 md:p-6 text-center xs:pl-2 md:text-left space-y-4\">\r\n          <form className=\"flex-auto\">\r\n            <div className=\"flex flex-wrap items-center justify-between\">\r\n              <h1 className=\"w-full flex-none font-bold mb-2.5 text-left\">\r\n                <Link to=\"/\">{product?.name}</Link>\r\n              </h1>\r\n              <div className=\"text-4xl leading-7 font-bold text-purple-600\">\r\n                {\"$\"}\r\n                {product?.price?.toFixed(2)}\r\n              </div>\r\n              <div className=\"text-sm font-medium text-gray-400 ml-3\">\r\n                In stock\r\n              </div>\r\n            </div>\r\n            <div className=\"font-semibold pt-8\">{product?.description}</div>\r\n\r\n            {product && product.tag ? (\r\n              <div className=\"font-semibold py-8 flex flex-row flex-wrap\">\r\n                {\" \"}\r\n                {product?.tag?.map((t) => (\r\n                  <div>\r\n                    <span className=\"bg-yellow-400 p-2 rounded-2xl\">\r\n                      {t.name}{\" \"}\r\n                    </span>\r\n                    &nbsp;\r\n                  </div>\r\n                ))}{\" \"}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"flex space-x-3 mt-8 mb-4 text-sm font-semibold\">\r\n              <div className=\"flex-auto flex justify-between\">\r\n                <button\r\n                  className=\"w-1/2 flex items-center justify-center rounded-full bg-purple-700 text-white py-2 md:w-1/4\"\r\n                  type=\"button\"\r\n                  onClick={buy}\r\n                >\r\n                  Buy now\r\n                </button>\r\n                <button\r\n                  className=\"flex items-center justify-center rounded-full bg-purple-50 text-purple-700\"\r\n                  type=\"button\"\r\n                  onClick={add}\r\n                >\r\n                  Add to bag\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-sm text-gray-500 text-left\">\r\n              Free shipping on all local orders.\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </figure>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n",["134","135"],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Orders.js",["136"],"import { useEffect, useState } from \"react\";\r\nimport OrderClient from \"../api/OrderClient\";\r\n\r\nconst Orders = ({ auth }) => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const formatDate = (dt) => {\r\n    return dt && new Date(dt).toLocaleString();\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchOrders() {\r\n      const client = new OrderClient(auth);\r\n      const res = await client.fetch();\r\n      if (res && res.success) {\r\n        console.log(res.data);\r\n        setOrders(res.data);\r\n      }\r\n    }\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"flex flex-col\">\r\n        <div className=\"overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n          <div className=\"py-4 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Order Date\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Order Items\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"pl-8 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Status\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Order Amount\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {orders && orders.length < 1 ? (\r\n                    <tr className=\"px-6 py-4 whitespace-nowrap\">\r\n                      Found zero order\r\n                    </tr>\r\n                  ) : (\r\n                    orders?.map((order) => (\r\n                      <tr>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"text-sm text-gray-900\">\r\n                            {formatDate(order?.date)}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-500\">\r\n                            Local Time\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"flex items-center\">\r\n                            <div className=\"\">\r\n                              <div className=\"text-sm font-medium text-gray-900\">\r\n                                {order?.items.map((o, idx) => (\r\n                                  <div>\r\n                                    <span className=\"text-sm text-gray-500\">\r\n                                      {idx + 1}.\r\n                                    </span>{\" \"}\r\n                                    {o.name}{\" \"}\r\n                                    <span className=\"text-xs font-normal text-gray-500\">\r\n                                      (\r\n                                      {o?.quantity +\r\n                                        \" x $\" +\r\n                                        o?.unitPrice?.toFixed(2)}\r\n                                      )\r\n                                    </span>\r\n                                    <br />\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\r\n                            {order?.status}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm text-gray-500\">\r\n                          ${order?.total?.toFixed(2)}\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\api\\Auth.js",[],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\api\\ProductClient.js",[],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\api\\CartClient.js",[],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Products.js",[],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Button.js",[],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\api\\OrderClient.js",[],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\api\\CustomerClient.js",[],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\CartItem.js",["137"],"import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartItem = ({ item, increaseQty, decreaseQty, removeItem }) => {\r\n  //const [item, setItem] = useState(cartItem);\r\n  const des = item ? item.description?.split(\".\") : [];\r\n  const author = des && des.length > 0 ? des[des.length - 1] : \"\";\r\n  const [total, setTotal] = useState();\r\n\r\n  const calTotal = (item) => {\r\n    setTotal((item?.unitPrice * item?.quantity)?.toFixed(2));\r\n  };\r\n\r\n  const updateQty = (qty) => {\r\n    if (qty === -1) {\r\n      decreaseQty(item?.id);\r\n    } else if (qty === 1) {\r\n      increaseQty(item?.id);\r\n    } else {\r\n      return false;\r\n    }\r\n    calTotal(item);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calTotal(item);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex items-center hover:bg-gray-200 -mx-8 px-6 py-5\">\r\n      <div className=\"flex w-2/5\">\r\n        <div className=\"w-32\">\r\n          <img className=\"h-24\" src={item?.imageUrl} alt=\"\" />\r\n        </div>\r\n        <div className=\"flex flex-col justify-between ml-4 flex-grow\">\r\n          <Link\r\n            to={\"/products/\" + item.id}\r\n            className=\"font-bold text-sm text-indigo-500 hover:text-indigo-700\"\r\n          >\r\n            {item?.name}\r\n          </Link>\r\n          <span className=\"text-xs\">Author: {author}</span>\r\n          <button\r\n            className=\"font-semibold hover:text-red-500 text-indigo-500 text-xs text-left\"\r\n            onClick={() => removeItem(item.id)}\r\n          >\r\n            Remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex items-center justify-center w-1/5\">\r\n        <span className=\"cursor-pointer\" onClick={() => updateQty(-1)}>\r\n          <svg className=\"fill-current text-gray-600 w-3\" viewBox=\"0 0 448 512\">\r\n            <path d=\"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\" />\r\n          </svg>\r\n        </span>\r\n\r\n        <input\r\n          className=\"mx-2 border text-center w-8\"\r\n          type=\"text\"\r\n          readOnly\r\n          value={item?.quantity}\r\n        />\r\n        <span className=\"cursor-pointer\" onClick={() => updateQty(1)}>\r\n          <svg className=\"fill-current text-gray-600 w-3\" viewBox=\"0 0 448 512\">\r\n            <path d=\"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\" />\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <span className=\"text-center w-1/5 font-semibold text-sm\">\r\n        {item?.unitPrice?.toFixed(2)}\r\n      </span>\r\n      <span className=\"text-center w-1/5 font-semibold text-sm\">${total}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\api\\Config.js",[],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\ProductCard.js",["138"],"import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CartClient from \"../api/CartClient\";\r\nimport { updateCart, useCartContext } from \"../hooks/CartContext\";\r\n\r\nconst ProductCard = ({ auth, product }) => {\r\n\r\n  const cartClient = new CartClient(auth);\r\n  const { cartItems, dispatch } = useCartContext();\r\n  const [msg, setMsg] = new useState(\"\");\r\n\r\n  const callAddItemApi = async () => {\r\n    const qty = findQty(product.id);\r\n    return cartClient.addOrUpdate({\r\n      id: product.id,\r\n      quantity: qty + 1,\r\n      unitPrice: product.price,\r\n    });\r\n  };\r\n\r\n  const findQty = (id) => {\r\n    const idx = cartItems.findIndex((i) => i.id === id);\r\n    if (~idx) {\r\n      return cartItems[idx].quantity;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const checkLogin = () => {\r\n    if (!auth.token) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const add = async () => {\r\n    const isLoggedIn = checkLogin();\r\n    if (isLoggedIn && product?.id) {\r\n      const res = await callAddItemApi();\r\n      if (res && res.success) {\r\n        console.log(res.data);\r\n        if (res.data?.length > 0) {\r\n          setMsg(\"Product added to bag.\");\r\n          dispatch(updateCart(res.data));\r\n        }\r\n      } else {\r\n        setMsg(res && typeof res === \"string\" ? res : res.error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const buy = async () => {\r\n    const isLoggedIn = checkLogin();\r\n    if (isLoggedIn && product?.id) {\r\n      const res = await callAddItemApi();\r\n      if (res && res.success) {\r\n      } else {\r\n        setMsg(res && typeof res === \"string\" ? res : res.error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={product.id}\r\n      className=\"my-1 px-1 w-full md:w-1/2 lg:my-4 lg:px-4 lg:w-1/3\"\r\n    >\r\n      <figure className=\"bg-gray-100 rounded-xl p-8 md:p-0 xs:flex md:block\">\r\n        <img\r\n          className=\"w-72 h-72 mx-auto\"\r\n          src={product.imageUrl}\r\n          alt={product.name}\r\n        />\r\n        <div className=\"pt-4 md:p-6 text-center xs:pl-2 md:text-left space-y-4\">\r\n          <form className=\"flex-auto\">\r\n            <div className=\"flex flex-wrap items-center justify-between\">\r\n              <h1 className=\"w-full flex-none font-bold mb-2.5 text-left\">\r\n                <Link to={`/products/${product.id}`}>{product.name}</Link>\r\n              </h1>\r\n              <div className=\"text-4xl leading-7 font-bold text-purple-600\">\r\n                {\"$\"}\r\n                {product.price.toFixed(2)}\r\n              </div>\r\n              <div className=\"text-sm font-medium text-gray-400 ml-3\">\r\n                In stock\r\n              </div>\r\n            </div>\r\n            <div className=\"flex space-x-3 mt-8 mb-4 text-sm font-semibold\">\r\n              <div className=\"flex-auto flex justify-between\">\r\n                <button\r\n                  className=\"w-1/2 flex items-center justify-center rounded-full bg-purple-700 text-white py-2\"\r\n                  type=\"button\"\r\n                  onClick={buy}\r\n                >\r\n                  Buy now\r\n                </button>\r\n                <button\r\n                  className=\"flex items-center justify-center rounded-full bg-purple-50 text-purple-700\"\r\n                  type=\"button\"\r\n                  onClick={add}\r\n                >\r\n                  Add to bag\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-sm text-gray-500 text-left\">\r\n              Free shipping on all local orders.\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </figure>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\index.tsx",["139","140","141"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n",["142","143"],"C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\App.js",["144","145","146","147"],"import './App.scss'\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport ProductList from \"./components/ProductList\";\r\nimport Login from \"./components/Login\";\r\nimport useToken from \"./hooks/useToken\";\r\nimport Main from \"./components/Main\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Auth from \"./api/Auth\";\r\nimport { CartContextProvider } from \"./hooks/CartContext\";\r\nimport { useEffect } from 'react';\r\n\r\nfunction App(props) {\r\n  const { token, setToken } = useToken();\r\n  const auth = new Auth(token, setToken);\r\n  const loginComponent = (props) => (\r\n    <Login {...props} uri=\"/login\" auth={auth} history={props.history} />\r\n  );\r\n  const MainComponent = (props) => <Main token={token} auth={auth} />;\r\n  console.log(window.location)\r\n  return (   \r\n    <Router>\r\n      <div className=\"containers\"> \r\n        < div className=\"flex-grow flex-shrink-0\">\r\n        <Header history={props.history} userInfo={token} auth={auth} />\r\n          <div className=\"main_container\">\r\n          <Sidebar></Sidebar>\r\n          <CartContextProvider>        \r\n            <Routes>\r\n              <Route path=\"/members\" element={<Main token={token} auth={auth} />} />\r\n              <Route path=\"/temp\" element={NotFound} />\r\n              <Route path=\"*\" element={NotFound} />\r\n            </Routes>\r\n          </CartContextProvider>   \r\n          </div>\r\n        </div>\r\n        <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={<Login {...props} uri=\"/login\" auth={auth}/>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/login\"\r\n          element={<Login {...props} uri=\"/login\" auth={auth}/>\r\n          }\r\n        />\r\n        </Routes>\r\n      </div> \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Main.js",["148","149","150","151","152","153","154","155","156"],"import './Main.scss'\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport NotFound from \"./NotFound\";\r\nimport Cart from \"./Cart\";\r\nimport Member from './Member';\r\n\r\nconst Main = ({token, auth }) => {\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n        <Member auth={auth}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Sidebar.js",["157"],"import './Sidebar.scss'\r\nimport React, {useState, useEffect} from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Sidebar() {\r\n\r\n  const menus = [\r\n    { name: \"나의 멤버십\", path: \"/members\" },\r\n    { name: \"학원 정보 등록 및 수정\", path: \"/temp\" },\r\n    { name: \"학원 쿠폰/광고 등록 및 신청\", path: \"/temp\" },\r\n    { name: \"나의 정보 수정\", path: \"/temp\" }\r\n  ];\r\n  const [clickItem, setClickItem] = useState(0);\r\n  const click = (index) =>{\r\n    setClickItem(index)\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {menus.map((menu, index) => {\r\n        return (\r\n          <Link to={menu.path} key={index}>\r\n            <div className={\"sidebar-item\"+ (clickItem === index ? \" on\": \"\")} onClick={()=>{click(index)}}>\r\n              <p>{menu.name}</p>\r\n            </div>\r\n          </Link>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","C:\\Users\\USER\\Documents\\chakangongbu\\admin\\src\\components\\Member.js",["158","159"],"import './Member.scss'\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dummy from \"../images/dummy_profileimg.png\"\r\nimport basic from \"../images/mabership_badge.png\"\r\nconst Member = ({ auth }) => {\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  }, []);\r\n\r\n  const dummy_data = {\r\n      name : \"김착한\",\r\n      cram : \"서초동수학학원\",\r\n      start : \"2021년 00월 00일\",\r\n      claim : \"2022년 00월 00일\",\r\n      claim_cash : \"35,000원(월)\",\r\n      auto : \"네\"\r\n  }\r\n\r\n  const pgapi = () =>{\r\n      window.open('http://49.50.165.59:9000/pgapi','target', 'top=100, left=300, width=900, height=600, toolbar=no, menubar=no, location=no, status=no, scrollbars=no')\r\n  }\r\n\r\n  return (\r\n    <div className=\"mamber_container\">\r\n        <div className='my_membership'>\r\n            나의 멤버십\r\n        </div>\r\n        <div className='profill'>\r\n            <div className='profill_img'>\r\n                <img src={dummy} alt=''></img>\r\n            </div>\r\n            <div className='profill_info'>\r\n                <div className='profill_badge'>\r\n                    <img src={basic} alt=''></img>\r\n                </div>\r\n                <div className='profill_cram'>\r\n                    {dummy_data.cram}\r\n                </div>\r\n                <div className='profill_name'>\r\n                    {dummy_data.name}\r\n                </div>\r\n                <div className='profill_text'>\r\n                    구독 시작일\r\n                </div>\r\n                <div className='profill_start'>\r\n                    {dummy_data.start}\r\n                </div>\r\n            </div>\r\n            <div className='linev'></div>\r\n            <div className='payment_info'>\r\n                <div className='month_claim'>\r\n                    {\"매월 청구일    \"+dummy_data.claim}\r\n                </div>\r\n                <div className='claim_cash'>\r\n                    {\"청구 금액    \"+dummy_data.claim_cash}\r\n                </div>\r\n                <div className='auto'>\r\n                    {\"자동 결제 신청    \"+dummy_data.auto}\r\n                </div>\r\n            </div>\r\n            <div className='sub_btn'>\r\n                <button className='open_claim'>청구서 보기</button>\r\n                <button className='change'>결제수단 변경</button>\r\n            </div>\r\n        </div>\r\n        <div className='lineh'></div>\r\n        <div className='membership_setting'>\r\n            <button className='membership_update' onClick={pgapi}>\r\n                멤버십 업데이트\r\n            </button>\r\n            <button className='subscribe_cancel'>\r\n                구독 취소\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Member;\r\n",{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"160","replacedBy":"164"},{"ruleId":"162","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":36,"column":6,"nodeType":"168","endLine":36,"endColumn":8,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"174","line":10,"column":10,"nodeType":"172","messageId":"173","endLine":10,"endColumn":18},{"ruleId":"170","severity":1,"message":"175","line":20,"column":9,"nodeType":"172","messageId":"173","endLine":20,"endColumn":21},{"ruleId":"166","severity":1,"message":"176","line":98,"column":6,"nodeType":"168","endLine":98,"endColumn":8,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":224,"column":36,"nodeType":"180","messageId":"181","endLine":224,"endColumn":38},{"ruleId":"170","severity":1,"message":"182","line":8,"column":10,"nodeType":"172","messageId":"173","endLine":8,"endColumn":18},{"ruleId":"170","severity":1,"message":"183","line":9,"column":10,"nodeType":"172","messageId":"173","endLine":9,"endColumn":18},{"ruleId":"170","severity":1,"message":"184","line":10,"column":18,"nodeType":"172","messageId":"173","endLine":10,"endColumn":27},{"ruleId":"170","severity":1,"message":"185","line":10,"column":10,"nodeType":"172","messageId":"173","endLine":10,"endColumn":13},{"ruleId":"166","severity":1,"message":"167","line":85,"column":6,"nodeType":"168","endLine":85,"endColumn":10,"suggestions":"186"},{"ruleId":"160","replacedBy":"187"},{"ruleId":"162","replacedBy":"188"},{"ruleId":"166","severity":1,"message":"189","line":21,"column":6,"nodeType":"168","endLine":21,"endColumn":8,"suggestions":"190"},{"ruleId":"166","severity":1,"message":"191","line":27,"column":6,"nodeType":"168","endLine":27,"endColumn":8,"suggestions":"192"},{"ruleId":"170","severity":1,"message":"185","line":10,"column":10,"nodeType":"172","messageId":"173","endLine":10,"endColumn":13},{"ruleId":"193","severity":1,"message":"194","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":23},{"ruleId":"193","severity":1,"message":"195","line":6,"column":27,"nodeType":"172","messageId":"173","endLine":6,"endColumn":33},{"ruleId":"193","severity":1,"message":"196","line":6,"column":35,"nodeType":"172","messageId":"173","endLine":6,"endColumn":40},{"ruleId":"160","replacedBy":"164"},{"ruleId":"162","replacedBy":"165"},{"ruleId":"170","severity":1,"message":"197","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":19},{"ruleId":"170","severity":1,"message":"198","line":12,"column":10,"nodeType":"172","messageId":"173","endLine":12,"endColumn":19},{"ruleId":"170","severity":1,"message":"199","line":17,"column":9,"nodeType":"172","messageId":"173","endLine":17,"endColumn":23},{"ruleId":"170","severity":1,"message":"200","line":20,"column":9,"nodeType":"172","messageId":"173","endLine":20,"endColumn":22},{"ruleId":"170","severity":1,"message":"201","line":2,"column":21,"nodeType":"172","messageId":"173","endLine":2,"endColumn":29},{"ruleId":"170","severity":1,"message":"202","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":14},{"ruleId":"170","severity":1,"message":"203","line":3,"column":16,"nodeType":"172","messageId":"173","endLine":3,"endColumn":26},{"ruleId":"170","severity":1,"message":"195","line":3,"column":45,"nodeType":"172","messageId":"173","endLine":3,"endColumn":51},{"ruleId":"170","severity":1,"message":"196","line":3,"column":53,"nodeType":"172","messageId":"173","endLine":3,"endColumn":58},{"ruleId":"170","severity":1,"message":"204","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"205","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":15},{"ruleId":"170","severity":1,"message":"206","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":16},{"ruleId":"170","severity":1,"message":"207","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":12},{"ruleId":"170","severity":1,"message":"198","line":2,"column":26,"nodeType":"172","messageId":"173","endLine":2,"endColumn":35},{"ruleId":"170","severity":1,"message":"201","line":2,"column":21,"nodeType":"172","messageId":"173","endLine":2,"endColumn":29},{"ruleId":"170","severity":1,"message":"202","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":14},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],["208"],["209"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["210"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'loggedIn' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cartClient' and 'refreshCart'. Either include them or remove the dependency array.",["211"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'setErrMsg' is assigned a value but never used.","'msg' is assigned a value but never used.",["212"],["208"],["209"],"React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["214"],"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'ProductList' is defined but never used.","'useEffect' is defined but never used.","'loginComponent' is assigned a value but never used.","'MainComponent' is assigned a value but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'Header' is defined but never used.","'Sidebar' is defined but never used.","'NotFound' is defined but never used.","'Cart' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [auth, dispatch]",{"range":"225","text":"226"},"Update the dependencies array to be: [cartClient, refreshCart]",{"range":"227","text":"228"},"Update the dependencies array to be: [auth, dispatch, id]",{"range":"229","text":"230"},"Update the dependencies array to be: [auth]",{"range":"231","text":"232"},"Update the dependencies array to be: [item]",{"range":"233","text":"234"},[1211,1213],"[auth, dispatch]",[3139,3141],"[cartClient, refreshCart]",[2400,2404],"[auth, dispatch, id]",[542,544],"[auth]",[744,746],"[item]"]